package com.mujdell2019.hackathon.models.db;

import java.util.HashMap;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.mujdell2019.hackathon.models.IMarshal;

@DynamoDBTable(tableName = "products")
public class DellProductDBModel implements IMarshal {

	/* Data Members */
	
	private String productId;
	private String name;
	private int price;
	private String imageUrl;
	private double discount;
	private ProductType productType;
	private HashMap<String, String> features;
	
	
	/* Constructors */
	
	public DellProductDBModel() {
		features = new HashMap<>();
	}
	
	public DellProductDBModel(String productId) {
		this();
		this.productId = productId;
	}
	
	public DellProductDBModel(String productId, ProductType productType) {
		this(productId);
		this.productType = productType;
	}
	
	public DellProductDBModel(String productId, String name, int price, String imageUrl, double discount, ProductType productType, HashMap<String, String> features) {
		this.productId = productId;
		this.name = name;
		this.price = price;
		this.imageUrl = imageUrl;
		this.discount = discount;
		this.productType = productType;
		this.features = features;
	}

	
	/* Getters and Setters */
	
	@DynamoDBHashKey(attributeName = "productId")
	@DynamoDBAutoGeneratedKey
	public String getProductId() { return productId; }
	public void setProductId(String productId) { this.productId = productId; }

	@DynamoDBIndexHashKey(attributeName = "productType")
	public ProductType getProductType() { return productType; }
	public void setProductType(ProductType productType) { this.productType = productType; }
	
	@DynamoDBAttribute(attributeName = "name")
	public String getName() { return name; }
	public void setName(String name) { this.name = name; }

	@DynamoDBAttribute(attributeName = "price")
	public int getPrice() { return price; }
	public void setPrice(int price) { this.price = price; }

	@DynamoDBAttribute(attributeName = "imageUrl")
	public String getImageUrl() { return imageUrl; }
	public void setImageUrl(String imageUrl) { this.imageUrl = imageUrl; }

	@DynamoDBAttribute(attributeName = "discount")
	public double getDiscount() { return discount; }
	public void setDiscount(double discount) { this.discount = discount; }
	
	@DynamoDBAttribute(attributeName = "features")
	public HashMap<String, String> getFeatures() { return features; }
	public void setFeatures(HashMap<String, String> features) { this.features = features; }
	
	
	/* JSON Marshal Method */
	
	@Override
	public JsonNode marshal() {
		ObjectMapper objectMapper = new ObjectMapper();
		JsonNode result = objectMapper.createObjectNode();
		
		// basic attributes
		((ObjectNode) result).put("productId", getProductId());
		((ObjectNode) result).put("name", getName());
		((ObjectNode) result).put("price", getPrice());
		((ObjectNode) result).put("imageUrl", getImageUrl());
		((ObjectNode) result).put("discount", getDiscount());
		((ObjectNode) result).put("productType", getProductType().name());
		
		// features
		JsonNode featuresNode = objectMapper.createObjectNode();
		for (String key : getFeatures().keySet())
			((ObjectNode) featuresNode).put(key, getFeatures().get(key));
		((ObjectNode) result).set("features", featuresNode);
		
		return result;
	}
}
