package com.mujdell2019.hackathon.models.db;

import java.util.HashMap;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.mujdell2019.hackathon.models.IMarshal;

@DynamoDBTable(tableName = "searchedProducts")
public class SearchedProductDBModel implements IMarshal {

	/* Data Members */
	
	private String queryId; // primary key
	private String dellProductId; // global secondary index key
	private String userId; // global secondary index key
	private String name;
	private String imageUrl;
	private int price;
	private String priceRange;
	private String type;
	private String timestamp;
	private String action;
	private String query;
	private HashMap<String, String> features;
	
	
	/* Constructors */
	
	public SearchedProductDBModel() {
		features = new HashMap<>();
	}
	
	public SearchedProductDBModel(String queryId) {
		this();
		this.queryId = queryId;
	}
	
	public SearchedProductDBModel(String queryId, String dellProductId, String userId, 
			String name, String imageUrl, int price, String priceRange, String type, 
			String timestamp, String action, String query, HashMap<String, String> features) {
		
		this.queryId = queryId;
		this.dellProductId = dellProductId;
		this.userId = userId;
		this.name = name;
		this.imageUrl = imageUrl;
		this.price = price;
		this.priceRange = priceRange;
		this.type = type;
		this.timestamp = timestamp;
		this.action = action;
		this.query = query;
		this.features = features;
	}

	
	/* Getters and Setters */

	@DynamoDBHashKey(attributeName = "queryId")
	@DynamoDBAutoGeneratedKey
	public String getQueryId() { return queryId; }
	public void setQueryId(String queryId) { this.queryId = queryId; }

	@DynamoDBIndexHashKey(attributeName = "dellProductId")
	public String getDellProductId() { return dellProductId; }
	public void setDellProductId(String dellProductId) { this.dellProductId = dellProductId; }

	@DynamoDBIndexHashKey(attributeName = "userId")
	public String getUserId() { return userId; }
	public void setUserId(String userId) { this.userId = userId; }

	@DynamoDBAttribute(attributeName = "name")
	public String getName() { return name; }
	public void setName(String name) { this.name = name; }

	@DynamoDBAttribute(attributeName = "imageUrl")
	public String getImageUrl() { return imageUrl; }
	public void setImageUrl(String imageUrl) { this.imageUrl = imageUrl; }

	@DynamoDBAttribute(attributeName = "price")
	public int getPrice() { return price; }
	public void setPrice(int price) { this.price = price; }

	@DynamoDBAttribute(attributeName = "priceRange")
	public String getPriceRange() { return priceRange; }
	public void setPriceRange(String priceRange) { this.priceRange = priceRange; }

	@DynamoDBAttribute(attributeName = "type")
	public String getType() { return type; }
	public void setType(String type) { this.type = type; }

	@DynamoDBAttribute(attributeName = "timestamp")
	public String getTimestamp() { return timestamp; }
	public void setTimestamp(String timestamp) { this.timestamp = timestamp; }

	@DynamoDBAttribute(attributeName = "action")
	public String getAction() { return action; }
	public void setAction(String action) { this.action = action; }

	@DynamoDBAttribute(attributeName = "query")
	public String getQuery() { return query; }
	public void setQuery(String query) { this.query = query; }

	@DynamoDBAttribute(attributeName = "features")
	public HashMap<String, String> getFeatures() { return features; }
	public void setFeatures(HashMap<String, String> features) { this.features = features; }
	
	
	/* JSON Marshal Method */

	@Override
	public JsonNode marshal() {
		ObjectMapper objectMapper = new ObjectMapper();
		JsonNode result = objectMapper.createObjectNode();
		
		((ObjectNode) result).put("queryId", getQueryId());
		((ObjectNode) result).put("dellProductId", getDellProductId());
		((ObjectNode) result).put("userId", getUserId());
		((ObjectNode) result).put("name", getName());
		((ObjectNode) result).put("imageUrl", getImageUrl());
		((ObjectNode) result).put("price", getPrice());
		((ObjectNode) result).put("priceRange", getPriceRange());
		((ObjectNode) result).put("type", getType());
		((ObjectNode) result).put("timestamp", getTimestamp());
		((ObjectNode) result).put("action", getAction());
		((ObjectNode) result).put("query", getQuery());
		
		// features
		JsonNode featuresNode = objectMapper.createObjectNode();
		HashMap<String, String> features = getFeatures();
		for (String key : features.keySet())
			((ObjectNode) featuresNode).put(key, features.get(key));
		((ObjectNode) result).set("features", featuresNode);
		
		return result;
	}
}
